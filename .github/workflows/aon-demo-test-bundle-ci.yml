# This GitHub workflow validates Bundle config (ML resource config and more)
# defined under aon_demo_test/databricks-resources/*
# and aon_demo_test/bundle.yml, when PRs are merged into the main branch
name: Bundle validation for aon-demo-test

on:
  workflow_dispatch:
  pull_request_target:

defaults:
  run:
    working-directory: ./aon_demo_test/

env:
  DATABRICKS_HOST_STAGING: ${{ secrets.DATABRICKS_HOST_STAGING }}
  DATABRICKS_TOKEN_STAGING:  ${{ secrets.DATABRICKS_TOKEN_STAGING }}
  DATABRICKS_HOST_PROD: ${{ secrets.DATABRICKS_HOST_PROD }}
  DATABRICKS_TOKEN_PROD:  ${{ secrets.DATABRICKS_TOKEN_PROD }}

jobs:
  staging:
    concurrency: aon-demo-test-staging-bundle-job
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - uses: databricks/setup-cli@main
      - name: Validate Bundle For Staging Environment
        id: validate
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_STAGING }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_STAGING }}

        run: |
          databricks bundle validate -e staging > ../validate_output.txt
      - name: Create Comment with Bundle Configuration
        uses: actions/github-script@v6
        id: comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const fileContents = fs.readFileSync('validate_output.txt', 'utf8');
            const output = `#### Bundle Staging Config Validated ðŸ–Œ
            <details><summary>Staging Validation Output</summary>

            \`\`\`\n
            ${fileContents}
            \`\`\`

            </details>`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  prod:
    concurrency: aon-demo-test-prod-bundle-job
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - uses: databricks/setup-cli@main
      - name: Validate Bundle For Prod Environment
        id: validate
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_PROD }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_PROD }}
        run: |
          databricks bundle validate -e prod > ../validate_output.txt
      - name: Create Comment with Bundle Configuration
        uses: actions/github-script@v6
        id: comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const fileContents = fs.readFileSync('validate_output.txt', 'utf8');
            const output = `#### Bundle Prod Config Validated ðŸ–Œ
            <details><summary>Prod Validation Output</summary>

            \`\`\`\n
            ${fileContents}
            \`\`\`

            </details>`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
